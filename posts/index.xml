<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>所有文章 - LGS Blog</title><link>https://geekstormm.github.io/posts/</link><description>波澜不惊 自强不息</description><generator>Hugo 0.139.0 &amp; FixIt v0.3.17-393a1393</generator><language>zh-CN</language><managingEditor>602272732@qq.com (LGS)</managingEditor><webMaster>602272732@qq.com (LGS)</webMaster><lastBuildDate>Sat, 30 Aug 2025 00:50:59 +0000</lastBuildDate><atom:link href="https://geekstormm.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>进程调度子系统</title><link>https://geekstormm.github.io/posts/schedoverview/</link><pubDate>Sun, 23 Mar 2025 23:04:25 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/schedoverview/</guid><category domain="https://geekstormm.github.io/categories/linux/">Linux</category><description>&lt;h2 id="进程调度子系统" class="heading-element">&lt;span>进程调度子系统&lt;/span>
 &lt;a href="#%e8%bf%9b%e7%a8%8b%e8%b0%83%e5%ba%a6%e5%ad%90%e7%b3%bb%e7%bb%9f" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>先留个坑，慢慢补&lt;/p>
&lt;h3 id="调度器发展简史" class="heading-element">&lt;span>调度器发展简史&lt;/span>
 &lt;a href="#%e8%b0%83%e5%ba%a6%e5%99%a8%e5%8f%91%e5%b1%95%e7%ae%80%e5%8f%b2" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h3 id="调度器是如何定义的运行队列长什么样子" class="heading-element">&lt;span>调度器是如何定义的，运行队列长什么样子&lt;/span>
 &lt;a href="#%e8%b0%83%e5%ba%a6%e5%99%a8%e6%98%af%e5%a6%82%e4%bd%95%e5%ae%9a%e4%b9%89%e7%9a%84%e8%bf%90%e8%a1%8c%e9%98%9f%e5%88%97%e9%95%bf%e4%bb%80%e4%b9%88%e6%a0%b7%e5%ad%90" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h3 id="新进程和老进程是如何确定自己该加入哪个运行队列的" class="heading-element">&lt;span>新进程和老进程是如何确定自己该加入哪个运行队列的&lt;/span>
 &lt;a href="#%e6%96%b0%e8%bf%9b%e7%a8%8b%e5%92%8c%e8%80%81%e8%bf%9b%e7%a8%8b%e6%98%af%e5%a6%82%e4%bd%95%e7%a1%ae%e5%ae%9a%e8%87%aa%e5%b7%b1%e8%af%a5%e5%8a%a0%e5%85%a5%e5%93%aa%e4%b8%aa%e8%bf%90%e8%a1%8c%e9%98%9f%e5%88%97%e7%9a%84" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h3 id="调度器是何时触发选择下一个待运行进程的" class="heading-element">&lt;span>调度器是何时触发选择下一个待运行进程的&lt;/span>
 &lt;a href="#%e8%b0%83%e5%ba%a6%e5%99%a8%e6%98%af%e4%bd%95%e6%97%b6%e8%a7%a6%e5%8f%91%e9%80%89%e6%8b%a9%e4%b8%8b%e4%b8%80%e4%b8%aa%e5%be%85%e8%bf%90%e8%a1%8c%e8%bf%9b%e7%a8%8b%e7%9a%84" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h3 id="进程不主动释放cpu的话每次调度最少能运行多久" class="heading-element">&lt;span>进程不主动释放CPU的话，每次调度最少能运行多久&lt;/span>
 &lt;a href="#%e8%bf%9b%e7%a8%8b%e4%b8%8d%e4%b8%bb%e5%8a%a8%e9%87%8a%e6%94%becpu%e7%9a%84%e8%af%9d%e6%af%8f%e6%ac%a1%e8%b0%83%e5%ba%a6%e6%9c%80%e5%b0%91%e8%83%bd%e8%bf%90%e8%a1%8c%e5%a4%9a%e4%b9%85" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h3 id="现代的进程调度还是按时间片来执行吗" class="heading-element">&lt;span>现代的进程调度还是按时间片来执行吗&lt;/span>
 &lt;a href="#%e7%8e%b0%e4%bb%a3%e7%9a%84%e8%bf%9b%e7%a8%8b%e8%b0%83%e5%ba%a6%e8%bf%98%e6%98%af%e6%8c%89%e6%97%b6%e9%97%b4%e7%89%87%e6%9d%a5%e6%89%a7%e8%a1%8c%e5%90%97" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h3 id="进程的nice值表示什么含义" class="heading-element">&lt;span>进程的nice值表示什么含义&lt;/span>
 &lt;a href="#%e8%bf%9b%e7%a8%8b%e7%9a%84nice%e5%80%bc%e8%a1%a8%e7%a4%ba%e4%bb%80%e4%b9%88%e5%90%ab%e4%b9%89" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h3 id="用户进程中高优先级能否抢占低优先级的cpu" class="heading-element">&lt;span>用户进程中，高优先级能否抢占低优先级的CPU&lt;/span>
 &lt;a href="#%e7%94%a8%e6%88%b7%e8%bf%9b%e7%a8%8b%e4%b8%ad%e9%ab%98%e4%bc%98%e5%85%88%e7%ba%a7%e8%83%bd%e5%90%a6%e6%8a%a2%e5%8d%a0%e4%bd%8e%e4%bc%98%e5%85%88%e7%ba%a7%e7%9a%84cpu" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;h3 id="为什么进程会在各个cpu上飘来飘去" class="heading-element">&lt;span>为什么进程会在各个CPU上飘来飘去&lt;/span>
 &lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%bf%9b%e7%a8%8b%e4%bc%9a%e5%9c%a8%e5%90%84%e4%b8%aacpu%e4%b8%8a%e9%a3%98%e6%9d%a5%e9%a3%98%e5%8e%bb" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3></description></item><item><title>Linux内存子系统</title><link>https://geekstormm.github.io/posts/mmoverview/</link><pubDate>Mon, 30 Dec 2024 01:27:18 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/mmoverview/</guid><category domain="https://geekstormm.github.io/categories/linux/">Linux</category><description>&lt;h2 id="系统物理内存初始化" class="heading-element">&lt;span>系统物理内存初始化&lt;/span>
 &lt;a href="#%e7%b3%bb%e7%bb%9f%e7%89%a9%e7%90%86%e5%86%85%e5%ad%98%e5%88%9d%e5%a7%8b%e5%8c%96" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;h2 id="10-关于内存的一些问题" class="heading-element">&lt;span>1.0 关于内存的一些问题&lt;/span>
 &lt;a href="#10-%e5%85%b3%e4%ba%8e%e5%86%85%e5%ad%98%e7%9a%84%e4%b8%80%e4%ba%9b%e9%97%ae%e9%a2%98" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;ul>
&lt;li>内核通过什么手段来识别可用内存硬件范围的&lt;/li>
&lt;li>内核管理物理内存用了哪些技术手段&lt;/li>
&lt;li>为什么free -m显示的总内存总比dmicode输出的要少，少了的内存去哪里了&lt;/li>
&lt;li>内核是如何知道某个内存地址范围属于那个NUMA的呢&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>NUMA (Non-Uniform Memory Access，非统一内存访问) 是一种内存设计架构，特点是： - 处理器可以访问自己的本地内存比访问非本地内存(远程内存)快 - 每个处理器都有自己的本地内存 - 处理器和内存被组织成&amp;quot;节点&amp;quot;(Node)&lt;/p></description></item><item><title>C++中的std::function</title><link>https://geekstormm.github.io/posts/funtional/</link><pubDate>Tue, 17 Dec 2024 23:02:18 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/funtional/</guid><category domain="https://geekstormm.github.io/categories/c++/">C++</category><description>&lt;h2 id="引言" class="heading-element">&lt;span>引言&lt;/span>
 &lt;a href="#%e5%bc%95%e8%a8%80" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;h3 id="stdfunction是什么" class="heading-element">&lt;span>std::function是什么&lt;/span>
 &lt;a href="#stdfunction%e6%98%af%e4%bb%80%e4%b9%88" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h3>&lt;p>std::function 是 C++11 引入的通用可调用对象包装器，用于封装函数、函数对象、Lambda 表达式以及 std::bind 返回的对象等各种可调用类型。它提供了统一的接口，能够在运行时存储和调用这些对象。
本质上就是一个模板类，它主要用来存储和调用可调用对象（通函数，lambda，重载了operator()的类，类的成员函数指针，std::bind的结果）。&lt;/p></description></item><item><title>深入浅出C++中的左值与右值</title><link>https://geekstormm.github.io/posts/valuecategories/</link><pubDate>Tue, 17 Dec 2024 01:14:18 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/valuecategories/</guid><category domain="https://geekstormm.github.io/categories/c++/">C++</category><description>&lt;h2 id="基本概念" class="heading-element">&lt;span>基本概念&lt;/span>
 &lt;a href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>在开始讲解左值和右值之前，咱们需要先理解两个基本概念：类型（Type）和值类别（Value Categories）。这两个概念经常被混淆，但它们其实是完全不同的东西。&lt;/p></description></item><item><title>C++ shared_ptr 循环引用</title><link>https://geekstormm.github.io/posts/shared_ptr/</link><pubDate>Sun, 15 Dec 2024 23:08:18 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/shared_ptr/</guid><category domain="https://geekstormm.github.io/categories/c++/">C++</category><description>&lt;h2 id="循环引用会导致什么" class="heading-element">&lt;span>循环引用会导致什么&lt;/span>
 &lt;a href="#%e5%be%aa%e7%8e%af%e5%bc%95%e7%94%a8%e4%bc%9a%e5%af%bc%e8%87%b4%e4%bb%80%e4%b9%88" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>正常的对象在生命周期结束后应该就释放持有的资源了, 但是如果两个shared_ptr对象互相指向对方, 在生命周期结束后两个变量确实会被销毁, 但是他们两个持有的资源依然会在内存中, 此时就引起了内存泄漏.&lt;/p></description></item><item><title>移动机器人算法Overview</title><link>https://geekstormm.github.io/posts/overview/</link><pubDate>Sun, 15 Dec 2024 23:08:18 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/overview/</guid><category domain="https://geekstormm.github.io/categories/algo/">Algo</category><description>&lt;h2 id="算法组件" class="heading-element">&lt;span>算法组件&lt;/span>
 &lt;a href="#%e7%ae%97%e6%b3%95%e7%bb%84%e4%bb%b6" class="heading-mark">
 &lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true">&lt;path d="m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z">&lt;/path>&lt;/svg>
 &lt;/a>
&lt;/h2>&lt;p>一般算法中存在两个进程, 一个SLAM, 一个Navigator, SLAM负责建图与定义, Navigator负责移动与规划.&lt;/p></description></item><item><title>进程与线程的创建</title><link>https://geekstormm.github.io/posts/a7f3bdf/</link><pubDate>Sun, 18 Aug 2024 01:32:36 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/a7f3bdf/</guid><category domain="https://geekstormm.github.io/categories/linux/">Linux</category><description>线程与进程的创建过程差异在哪里🧐</description></item><item><title>Clangd工作原理</title><link>https://geekstormm.github.io/posts/0817/</link><pubDate>Sat, 17 Aug 2024 23:53:10 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/0817/</guid><category domain="https://geekstormm.github.io/categories/%E7%BC%96%E8%AF%91/">编译</category><description>Clangd工作原理</description></item><item><title>进程与线程的区别</title><link>https://geekstormm.github.io/posts/f1a5e95/</link><pubDate>Sat, 17 Aug 2024 13:32:20 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/f1a5e95/</guid><category domain="https://geekstormm.github.io/categories/linux/">Linux</category><description>进程和线程的区别远远没你想象中的大!🤯</description></item><item><title>观察者模式</title><link>https://geekstormm.github.io/posts/observer/</link><pubDate>Sat, 17 Aug 2024 01:07:17 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/observer/</guid><category domain="https://geekstormm.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/">设计模式</category><description>观察者模式</description></item><item><title>Leetcode2216</title><link>https://geekstormm.github.io/posts/leetcode2216/</link><pubDate>Tue, 06 Aug 2024 00:23:25 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/leetcode2216/</guid><category domain="https://geekstormm.github.io/categories/leecode/">Leecode</category><category domain="https://geekstormm.github.io/categories/git/">Git</category><description>Leetcode2216</description></item><item><title>虚拟节点的用处</title><link>https://geekstormm.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%AD%E7%9A%84%E8%99%9A%E6%8B%9F%E8%8A%82%E7%82%B9/</link><pubDate>Tue, 06 Aug 2024 00:23:25 +0800</pubDate><author>602272732@qq.com (LGS)</author><guid>https://geekstormm.github.io/posts/%E7%AE%97%E6%B3%95%E4%B8%AD%E7%9A%84%E8%99%9A%E6%8B%9F%E8%8A%82%E7%82%B9/</guid><category domain="https://geekstormm.github.io/categories/leecode/">Leecode</category><category domain="https://geekstormm.github.io/categories/git/">Git</category><description>虚拟节点的用处</description></item></channel></rss>